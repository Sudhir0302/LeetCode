540. Single Element in a Sorted Array

Example 1:

Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:

Input: nums = [3,3,7,7,10,11,11]
Output: 10
 

solution:


//since there are exactly a number repeated twice except one number and 
so ,it Follows a pattern (even,odd,even,odd) (i.e) a[even]==a[odd].we have to check which half to eleminate.
if pair is (even,odd) means eleminate left half otherwise (odd,even) means eleminate right half.

class Solution 
{
    public int singleNonDuplicate(int[] nums) 
    {
        if(nums.length==1){
            return nums[0];
        }
        if(nums[0]!=nums[1]){
            return nums[0];
        }
        if(nums[nums.length-1]!=nums[nums.length-2]){
            return nums[nums.length-1];
        }
        int i=1,j=nums.length-2;
        while(i<=j)
        {
            int mid=i+(j-i)/2;
            if(nums[mid]!=nums[mid-1]&&nums[mid]!=nums[mid+1]){
                return nums[mid];
            }
            //if mid is even means compare with mid+1 and if odd means compare with mid-1.Hence it follows (even,odd) pair.
            if((mid%2!=0&&nums[mid]==nums[mid-1])||(mid%2==0&&nums[mid]==nums[mid+1]))  
            {
                i=mid+1;
            }else {
                j=mid-1;
            }
        }
        return -1;
    }
}