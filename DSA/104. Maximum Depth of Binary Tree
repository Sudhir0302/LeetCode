104. Maximum Depth of Binary Tree
Solved
Easy
Topics
Companies
Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: 3
Example 2:

Input: root = [1,null,2]
Output: 2
 

Constraints:

The number of nodes in the tree is in the range [0, 104].
-100 <= Node.val <= 100


solution:


class Solution 
{
    public int maxDepth(TreeNode root) 
    {
        if(root==null){
            return 0;
        }
        // return 1+Math.max(maxDepth(root.left),maxDepth(root.right));
        Queue<TreeNode>q=new LinkedList<>();
        int l=0;
        q.add(root);
        while(!q.isEmpty())
        {
            int len=q.size();
            for(int i=0;i<len;i++)
            {
                TreeNode curr=q.poll();
                if(curr.left!=null){
                    q.add(curr.left);
                }
                if(curr.right!=null){
                    q.add(curr.right);
                }
            }
            l++;
        }
        return l;
    }
}
