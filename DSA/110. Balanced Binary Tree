Given a binary tree, determine if it is 
height-balanced
.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: true
Example 2:


Input: root = [1,2,2,3,3,null,null,4,4]
Output: false
Example 3:

Input: root = []
Output: true
 

Constraints:

The number of nodes in the tree is in the range [0, 5000].
-104 <= Node.val <= 104

solution: 

//backtrackinggg


class Solution 
{
    public boolean isBalanced(TreeNode root) 
    {
    //    System.out.print(back(root));
       return back(root)!=-1;
    }
    public static int back(TreeNode root)
    {
        if(root==null){
            return 0;
        }
        int l=back(root.left);
        if(l==-1){
            return -1;
        }
        int r=back(root.right);
        if(r==-1){
            return -1;
        }
        if(Math.abs(l-r)>1){
            return -1;
        }
        return Math.max(l,r)+1;
    }
}