92. Reverse Linked List II

Example 1:

Input: head = [1,2,3,4,5], left = 2, right = 4
Output: [1,4,3,2,5]

Example 2:

Input: head = [5], left = 1, right = 1
Output: [5]
 

Constraints:

The number of nodes in the list is n.
1 <= n <= 500
-500 <= Node.val <= 500
1 <= left <= right <= n
 
solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution 
{
    public ListNode reverseBetween(ListNode head, int l, int r) 
    {
        ListNode curr=head;
        ListNode left=null;
        ListNode right=null;
        ListNode pre=null;
        ListNode lst=null;
        int c=1;
        while(curr!=null){
            if(c==l){
                left=curr;
            }
            if(c==r){
                right=curr;
                lst=curr.next;
                break;
            }
            if(left==null){
                pre=curr;
            }
            c++;
            curr=curr.next;
        }
        ListNode prev=null;
        ListNode nxt=null;
        ListNode tmp=left;
        while(left!=lst){
            nxt=left.next;
            left.next=prev;
            prev=left;
            left=nxt;
        }
        if(pre!=null){
            pre.next=prev;
        }else{
            head=prev;
        }
        tmp.next=lst;
        return head;
    }
}